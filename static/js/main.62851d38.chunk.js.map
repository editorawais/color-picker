{"version":3,"sources":["Colors.jsx","App.js","reportWebVitals.js","index.js"],"names":["toast","configure","Colors","useState","colorname","CopyColor","e","color","target","innerText","navigator","clipboard","writeText","readText","success","position","POSITION","TOP_RIGHT","className","map","style","background","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAGAA,IAAMC,YAEN,IA2BeC,EA3BA,WAAO,IAAD,EACEC,mBAAS,CAAC,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UACzF,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAChF,UAAU,YAFxBC,EADW,oBAKXC,EAAY,SAACC,GACf,IAAIC,EAAQD,EAAEE,OAAOC,UAClBC,UAAUC,YACTD,UAAUC,UAAUC,UAAUL,GAC9BG,UAAUC,UAAUE,WACpBb,IAAMc,QAAN,0BAAiCP,EAAjC,WAAiD,CAC7CQ,SAAUf,IAAMgB,SAASC,cAKrC,OACI,qBAAKC,UAAU,MAAf,SACKd,EAAUe,KAAI,SAAAZ,GAAK,OAChB,qBAAKW,UAAU,OAAmBE,MAAO,CAACC,WAAYd,GAAQe,QAASjB,EAAvE,SACI,8BAAME,KADiBA,SCb5BgB,EARH,WACV,OACE,8BACE,cAAC,EAAD,OCMSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.62851d38.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\ntoast.configure();\r\n\r\nconst Colors = () => {\r\n    const[colorname] = useState([\"#FFC312\",\"#C4E538\",\"#12CBC4\",\"#FDA7DF\",\"#ED4C67\",\"#F79F1F\",\"#A3CB38\",\"#1289A7\",\"#D980FA\",\r\n                        \"#B53471\",\"#EE5A24\",\"#009432\",\"#0652DD\",\"#9980FA\",\"#833471\",\"#EA2027\",\"#006266\",\"#1B1464\",\r\n                        \"#5758BB\",\"#6F1E51\"]);\r\n\r\n    const CopyColor = (e) =>{\r\n        let color = e.target.innerText;\r\n        if(navigator.clipboard){\r\n            navigator.clipboard.writeText(color);\r\n            navigator.clipboard.readText();\r\n            toast.success(`You have copied ${color} value.`, {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            {colorname.map(color => (\r\n                <div className=\"item\" key={color} style={{background: color}} onClick={CopyColor}>\r\n                    <div>{color}</div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Colors;\r\n","import React from 'react';\nimport Color from './Colors';\n\nconst App = () => {\n  return (\n    <div>\n      <Color />\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}